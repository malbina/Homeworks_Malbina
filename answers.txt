Как вы понимаете Error? RuntimeException? CheckedException?

2. Для чего применяется throw?

3. Разница между Unchecked Exceptions & Checked Exceptions? (Прям совсем своими словами!)

4. Как вы понимаете блоки try {} catch {} finally {}?

5. Почему при множественном catch, сначала используем более детальные Exceptions, и только потом переходим к родителям?

Checked Exception это исключения которые предвидимые исключенияю
RuntimeException это икслючения которые появляются в ходе программы,
то есть непредвидимые.
Error-это исключения которые по уровню опасности стоят выше RuntimeException
и могут привести к гибели программы.
throw применяется для выбрасывания исключений

Unchecked Exceptions непредвидимые исключения, их можно иногда предвидеть и обработать.
А Checked Exceptions мы должны уже предвидеть и обработать

try {} catch {} finally {}?
эти блоки используются для  чтобы "поймать" исключения, иными
чтобы  предотвратить исключения и аварийное завершение программы.

При множеством catch мы ставим родительский класс Exception в конце,
так как он может упустить некоторые исключения , и к тому же ,если его поставить
в начале то он покрывает все классы наследники,и чтобы он их не покрывал
пишется он в конце
